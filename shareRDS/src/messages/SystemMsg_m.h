//
// Generated file, do not edit! Created by opp_msgc 4.2 from messages/SystemMsg.msg.
//

#ifndef _SYSTEMMSG_M_H_
#define _SYSTEMMSG_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0402
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif



/**
 * Enum generated from <tt>messages/SystemMsg.msg</tt> by opp_msgc.
 * <pre>
 * enum OperationType{
 * READ=0;
 * WRITE=1;
 * COMMIT=2;
 * ROLLBACK=3;
 * UPDATE = 4;
 * ACK = 5;
 * DELETE = 6;
 * REINCAR=7;
 * };
 * </pre>
 */
enum OperationType {
    READ = 0,
    WRITE = 1,
    COMMIT = 2,
    ROLLBACK = 3,
    UPDATE = 4,
    ACK = 5,
    DELETE = 6,
    REINCAR = 7
};

/**
 * Enum generated from <tt>messages/SystemMsg.msg</tt> by opp_msgc.
 * <pre>
 * enum ReplyCodeType{
 * FAIL=0;
 * SUCCESS=1;
 * SUCC_CLIENT=2;
 * NONE=3;
 * };
 * </pre>
 */
enum ReplyCodeType {
    FAIL = 0,
    SUCCESS = 1,
    SUCC_CLIENT = 2,
    REINC = 3,
    NONE = 4
};

/**
 * Class generated from <tt>messages/SystemMsg.msg</tt> by opp_msgc.
 * <pre>
 * packet SystemMsg {
 *     int clientID =-1;		
 *     int replicaID=-1;		
 *     int replicaOwnerID = -1;	
 *     int lamportClock=-1;
 *     int replyCode=-1 @enum(ReplyCodeType);
 *     int operation=-1 @enum(OperationType);
 *     string dataID;
 *     int data;
 * };
 * </pre>
 */
class SystemMsg : public ::cPacket
{
  protected:
    int clientID_var;
    int replicaID_var;
    int replicaOwnerID_var;
    int lamportClock_var;
    int replyCode_var;
    int operation_var;
    opp_string dataID_var;
    int data_var;

  private:
    void copy(const SystemMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const SystemMsg&);

  public:
    SystemMsg(const char *name=NULL, int kind=0);
    SystemMsg(const SystemMsg& other);
    virtual ~SystemMsg();
    SystemMsg& operator=(const SystemMsg& other);
    virtual SystemMsg *dup() const {return new SystemMsg(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getClientID() const;
    virtual void setClientID(int clientID);
    virtual int getReplicaID() const;
    virtual void setReplicaID(int replicaID);
    virtual int getReplicaOwnerID() const;
    virtual void setReplicaOwnerID(int replicaOwnerID);
    virtual int getLamportClock() const;
    virtual void setLamportClock(int lamportClock);
    virtual int getReplyCode() const;
    virtual void setReplyCode(int replyCode);
    virtual int getOperation() const;
    virtual void setOperation(int operation);
    virtual const char * getDataID() const;
    virtual void setDataID(const char * dataID);
    virtual int getData() const;
    virtual void setData(int data);
};

inline void doPacking(cCommBuffer *b, SystemMsg& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, SystemMsg& obj) {obj.parsimUnpack(b);}


#endif // _SYSTEMMSG_M_H_
